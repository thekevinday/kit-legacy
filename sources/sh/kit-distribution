#!/bin/bash
# provides functions for processing and execution of distribution files.

kit_distribution_unset() {
  unset kit_distribution_load
  unset kit_distribution_unset
}

kit_distribution_load() {
  local i=0

  kit_log_message
  kit_log_message message "obtaining and reading data for distribution '$distribution', version '$distribution_version', flavor '$distribution_flavor'"

  if [[ ! -d $system_cache_path ]] ; then
    kit_message_shell "mkdir -p $system_cache_path"
    mkdir -p $system_cache_path

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to create the directory '$c_notice$system_cache_path$c_error'"
      cleanup_before_exit
      return
    fi
  fi

  if [[ ! -d $distribution_base ]] ; then
    kit_message_shell "git clone --progress $remote_depth -q -o $remote_branch -n $remote_url_git$distribution_path$distribution_flavor $distribution_base"
    git clone --progress $remote_depth -q -o $remote_branch -n $remote_url_git$distribution_path$distribution_flavor $distribution_base

    if [[ $? -ne 0 || ! -d $distribution_base ]] ; then
      kit_message_error "Failed to clone '$c_notice$remote_url_git$distribution_path$distribution_flavor$c_error' with branch of '$c_notice$remote_branch$c_error' to '$c_notice$distribution_base$c_error'"
      exit -1
    fi

    kit_message_shell "cd $distribution_base"
    cd $distribution_base

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to change to the directory '$c_notice$distribution_base$c_error'$c_reset"
      cleanup_before_exit
      exit -1
    fi

    kit_message_shell "git checkout"
    git checkout

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to checkout repository at '${c_notice}$distribution_base$c_error'"
      cleanup_before_exit
      exit -1
    fi
  else
    kit_message_shell "cd $distribution_base"
    cd $distribution_base

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to change to the directory '$c_notice$distribution_base$c_error'$c_reset"
      cleanup_before_exit
      exit -1
    fi
  fi

  if [[ $kit_operation == "update" && $(kit_core_is_empty $targets) == "" ]] ; then
    kit_message_shell "git pull --quiet --progress"
    git pull --quiet --progress

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to update repository at '${c_notice}$distribution_base$c_error'$c_reset"
      cleanup_before_exit
      exit -1
    fi

    echo -e "${c_highlight}The branch '${c_notice}$remote_branch$c_highlight' and flavor '${c_notice}$distribution_flavor$c_highlight' for the distribution '${c_notice}$distribution$c_highlight' has been updated.$c_reset"
  elif [[ $kit_operation == "reset" && $(kit_core_is_empty $targets) == "" ]] ; then
    kit_message_shell "git reset --hard --quiet"
    git reset --hard --quiet

    if [[ $? -ne 0 ]] ; then
      kit_message_error "Failed to reset repository at '${c_notice}$distribution_base$c_error'$c_reset"
      cleanup_before_exit
      exit -1
    fi

    kit_message_highlight "The branch '${c_notice}$remote_branch$c_highlight' and flavor '${c_notice}$distribution_flavor$c_highlight' for the distribution '${c_notice}$distribution$c_highlight' has been reset."
  fi
}
