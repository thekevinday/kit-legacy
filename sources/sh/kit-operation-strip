#!/bin/bash
# the strip operation removes debugging information from executables and libraries.
# the executable and library operations already perform strips, so this is only needed if strip is explicitly needed.
#
# arguments:
#   filetype:
#   - the type of file to strip, either executable or library.
#   filepath/directory:
#   - if this is a filepath, then strip will be performed on the specified file.
#   - if this is a directory, then strip will be performed on all binaries (executables & libraries) within the specified folder (not recursively).
#
# variables:
#   strip:
#   - "yes" (default): all strip commands will be performed.
#   - "explicit": only strip commands given by this operation will be performed.
#   - "implicit": only automatic strip commands will be performed (aka: the strip operation does nothing).
#   - "no": no strip commands will be performed (aka: the strip operation does nothing).

kit_operation_strip_unset() {
  unset kit_operation_strip
  unset kit_operation_strip_apply
  unset kit_operation_strip_unset
}

kit_operation_strip() {
  local filetype=
  local filepath=

  # operation controls
  local parent=$parent-$self
  local self=operation

  kit_operation_message

  filetype=$(echo object $line | fss_extended_read -c 0 -s 0)
  filepath=$(echo object $line | fss_extended_read -c 0 -s 1)

  kit_operation_strip_apply "$filetype" "$filepath"
}

kit_operation_strip_apply() {
  local filetype=$1
  local filepath=$2

  local i=
  local files=

  if [[ $strip == "yes" || $strip == "explicit" ]] ; then
    if [[ $filetype != "executable" && $filetype != "library" ]] ; then
      kit_operation_error "The strip filetype parameter '$c_notice$filetype$c_error' is invalid, must be either: executable or library"
    fi

    if [[ -d $filepath ]] ; then
      if [[ $filetype == "executable" ]] ; then
        files=$(find $filepath -maxdepth 1 -type f)

        for i in $files ; do
          if [[ $(file -L -b $i | grep -s -o '\<executable\>') != "" ]] ; then
            kit_message_shell "strip --strip-debug $i"
            strip --strip-debug $i

            if [[ $? -ne 0 ]] ; then
              kit_operation_error "Failed to strip the executable '$c_notice$i$c_error'"
            fi
          fi
        done
      elif [[ $filetype == "library" ]] ; then
        files=$(find $filepath -maxdepth 1 -type f)

        for i in $files ; do
          if [[ $(file -L -b $i | grep -s -o '\<shared object\>') != "" || $(file -L -b $i | grep -s -o '\<ar archive\>') != "" ]] ; then
            kit_message_shell "strip --strip-debug $i"
            strip --strip-debug $i

            if [[ $? -ne 0 ]] ; then
              kit_operation_error "Failed to strip the library '$c_notice$i$c_error'"
            fi
          fi
        done
      fi
    elif [[ -f $filepath ]] ; then
      if [[ $filetype == "executable" ]] ; then
        if [[ $(file -L -b $filepath | grep -s -o '\<executable\>') != "" ]] ; then
          kit_message_shell "strip --strip-debug $filepath"
          strip --strip-debug $filepath
        else
          kit_operation_error "Cannot strip '$c_notice$filepath$c_error' because it is not an executable"
        fi
      elif [[ $filetype == "library" ]] ; then
        if [[ $(file -L -b $filepath | grep -s -o '\<shared object\>') != "" || $(file -L -b $filepath | grep -s -o '\<ar archive\>') != "" ]] ; then
          kit_message_shell "strip --strip-debug $filepath"
          strip --strip-debug $filepath
        else
          kit_operation_error "Cannot strip '$c_notice$filepath$c_error' because it is not a library"
        fi
      fi
    else
      kit_operation_error "The strip filepath or directory '$c_notice$filepath$c_error' is invalid"
    fi
  fi
}
