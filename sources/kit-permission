#!/bin/bash
# provides functions for reading and writing permission variables.

kit_permission_unset() {
  unset kit_permission_is
  unset kit_permission_set
  unset kit_permission_get
}

kit_permission_is() {
  local name=$2
  local list=$1

  echo -n $(echo -n $permission_variables | grep -s -o "\<${list}_$name=[[:digit:]]*\>" | sed -e "s|$name=||")
}

kit_permission_set() {
  local name=$2
  local value=$3
  local position=
  local list=$1

  position=$(kit_permission_is $list $name)

  if [[ $position == "" ]] ; then
    permission_data[$permission_total]=$value
    permission_variables="${permission_variables}${list}_$name=$permission_total "
    let permission_total++
  else
    permission_data[$position]=$value
  fi

  kit_log_message save permission "${list}_$name" "$value"
}

kit_permission_get() {
  local name=$2
  local position=
  local file=
  local list=$1

  if [[ $name == "" ]] ; then
    permission=
    return
  fi

  permission=
  position=$(kit_permission_is $name)

  # loading priority is: memory (permission_data), system settings, and then distribution settings.
  if [[ $position != "" && $position -ge 0 ]] ; then
    permission=${permission_data[$position]}
  else
    for file in "$system_settings_path$system_permissions_file" "$distribution_settings_path$distribution_permissions_file" ; do
      if [[ -f $file ]] ; then
        if [[ $(fss_basic_list_read -n $list -t $file) -gt 0 && $(fss_basic_list_read -c 0 -n $list $file | fss_basic_read -t -n $name) -gt 0 ]] ; then
          kit_log_message load permission "${list}_$name" "fss_basic_list_read -c 0 -n $list $file | fss_basic_read -c 0 -n $name"
          permission=$(fss_basic_list_read -c 0 -n $list $file | fss_basic_read -c 0 -n $name)
          kit_permission_set "$list" "$name" "$permission"
          return
        fi
      fi
    done
  fi
}
